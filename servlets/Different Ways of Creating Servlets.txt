Different Ways of Creating Servlets:
As per the predefined library(packages javax.servlet.*, javax.servlet.Http.*) provided by the Servlet API, there are 3 ways to design servlet.
1)Implementing Servlet Interface:
public class MyServlet implements Servlet{
	//Body of the Servlet
}
2)Extending Generic Servlet Abstract Class:
public class MyServlet extends Genericservlet{
	//Body of the Servlet
}
3)Extending Httpservlet Abstract Class:
public class MyServlet extends Httpservlet{
	////Body of the Servlet
}

1)Implementing Servlet Interface:
import java.io.*;  
import javax.servlet.*;   
public class MyServlet implements Servlet{  
	ServletConfig config=null;  
	public void init(ServletConfig config){  
	this.config=config;  
	System.out.println("servlet is initialized....");  
	}  
	public void service(ServletRequest req,ServletResponse res) throws IOException,ServletException{  
	res.setContentType("text/html");  
	PrintWriter out=res.getWriter();  
	out.print("<html><body><b>MyServlet Example</b></body></html>");  
	}  
	public String getServletInfo(){return "servlet info";}  
	public ServletConfig getServletConfig(){return config;}  
	public void destroy(){System.out.println("servlet is destroyed....");}  
}  
2)Extending Generic Servlet Abstraact Class:
import java.io.*;  
import javax.servlet.*;  
public class MyServlet extends GenericServlet{  
public void service(ServletRequest req,ServletResponse res) throws IOException,ServletException{  
	res.setContentType("text/html");  
	PrintWriter out=res.getWriter();  
	out.print("<html><body><b>MyServlet Example</b></body></html>");  
	}  
} 
3)Extending Httpservlet Abstract Class:
import javax.servlet.http.*;  
import javax.servlet.*;  
import java.io.*;  
public class MyServlet extends HttpServlet{  
public void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException  
{  
	res.setContentType("text/html");
	PrintWriter out=res.getWriter();
	out.print("<html><body><b>MyServlet Example</b></body></html>");    
	out.close();
	}
}   
----------------
