{
  "javaq": {
    "ques": {
      "topics": ["Core Java","Servlets","Jsp's","Struts","Springs","Hibernates"
      ],
      "Core Java": ["Java Introduction","Oops Concepts","KeyWords","String","Constructors","Method Overloading","Method Overridding","Abstract Vs Interface",
		"Inner Class","Exception Handling","Multithreading","I/O","Collections","Enums","Jdbc",,"Reflection","New Features","Applets","Swings","this",
		"super","final","Other KeyWords","Serialization & De-Ser..","Miscelinious"
      ],
       "Servlets": ["Servlets Introduction","What is Servlet?","CGI","Servlet API(Package : javax.servlet)","Servlet API(Package : javax.servlet.http)",
		"Servlet Life Cycle","Different Ways of Creating Servlets","ServletContext  Interface","ServletConfig Interface","RequestDispatcher Interface ","Filters",
		"HTTP Status Codes","Session Tracking Mechanism","Session Tracking : HTTP ","Session Tracking : Cookies","Session Tracking : URL-Rewritting",
		"Session Tracking : Hidden Form Fields","Annotations in servlets","SingleThreadModel interface","Asynchronous Servlet"
      ],
      "Jsp's":["Jsp Introduction","Jsp API","Life Cycle Phases  of Jsp Page","Jsp Components","Implicit Elements","Expression Language","JSTL","Jsp Actions","Jsp Scopes",
	 "JavaBeans in Jsp",	"Custom Actions"
      ],
      "Struts":["Struts 2.x Introduction",
       "MVC  Model: 2",
		"Features",
		"Architecture",
		"Configuration Files",
		"Struts 2.x API",
		"Action",
		"Interceptors",
		"ValueStack",
		"ActionContext",
		"ActionInovocation",
		"OGNL",
		"Aware Interfaces",
		"Exception Handling",
		"Multi Configuration",
		"Multi Namespace",
		"Validation",
		"I18N",
		"Tiles2"
      ],
      
      "Springs":[
      "Springs 3.x Introduction",
		"Spring Architecture",
		"Spring Modules",
		"IOC Container",
		"Bean Defination",
		"Bean Scopes",
		"Bean Lift Cycle",
		"Spring Bean Autowiring",
		"Autowiring - by Name",
		"Autowiring - by Type",
		"Autowiring - by Constructor",
		"Autowiring - by Autodetect",
		"DI - Constructor",
		"DI - Setter",
		"DI - Interface",
		"Spring AOP",
		"AOP - DTD",
		"AOP - XML",
		"AOP - Annotation",
		"AOP - Before Advice",
		"AOP - After Advice",
		"AOP - Around Advice",
		"AOP - Throws Advice",
		"AOP - Joint Point",
		"AOP - Point Cut",
		"Spring JDBD"
		],
  		"Hibernates":[
  		"Hibernates Overview",
"ORM Overview",
"Advantages & Disadvantages",
"Hibernates Architecture",
"Hibernate API",
"Configuration",
"Session",
"Genrator Classes",
"Dialect",
"Persistant Class"
  		
  		],
      "Java Introduction": [
        "
      <br>In 1990, <font color=\"#0091EA\"><b>Sun Micro Systems Inc</b></font>  has conceived a project to develop software for consumer electronic devices that could be controlled by a remote.<br>
This project was called Stealth Project , but later it's name was changed to Green Project.<br>
In january of 1991,  James Gosling, Bill Joy, Mike Sheradin, Patrick Naughton, and several others met in Aspen, Colorado to discuss this project.<br>
Mike Sheradin was to focus on business development.PatrickNaughton was to focus on the graphics systems.<br> 
James Gosling was to identify the proper programming language for the project.<br>
Initially Gosling thought C & C++ could be used to develop the project, but the problem he faced with C & C++ is that they were system dependent languages and hence could not be used on various processors.<br>
So he started a new programming language, which was system independent. This language was initially called Oak. <br>
Since Oak name was registered by some other company, later it was changed as Java.<br>
<br>
<font color=\"#0091EA\"><b>Why the name Java?<br></b></font>
James Gosling & his team members were consuming a lot of coffee while developing this language. <br>
They felt that they were able to develop a better language because of the good quality coffee they consumed.<br>
So the coffee had its role in developing this language and good quality coffee was imported from a place called 'Java island'.<br>
Hence they given,  the name of the place for the language they developed. And the symbol for Java language is coffee cup & saucer.<br>
<br>
Initially Java is a part of Sun Microsystems ,  which is now a part of Oracle Corporation.<br>
<br>
Java is a programming language, a high-level programming language and a platform, supporting the concepts of Object-oriented Programming.<br>
It was released in 1995 as a part of Sun Microsystems' Java platform. <br><br>

Some of the Vesions, Codename & Productnames.<br>
Version	 >>  Codename	 >> productname<br>
<font color=\"#0091EA\"><b>
1.5	 	>> Tiger		 					>> J2SE 5<br>
1.6	 	>> Mustang	 				>> Java SE 6<br>
1.7	 	>> Dolphin	 					>> Java SE 7<br>
1.8	 	>> (discontinued) 			>> Java SE 8<br>
</b></font>
<br>

Initial version of Java contains only J2SE, later Sun Microsystems  added remaining 2 flavours i.e, J2EE & J2ME.<br>
<font color=\"#0091EA\"><b>J2SE </b></font>: Java Platform Standard Edition :  It is used to develop secure and portable applications that run on server & and desktop.<br>
<font color=\"#0091EA\"><b>J2EE </b></font>: Java Enterprise Edition : It is the industory standard for enterprise java computing i.e, for developing web application.<br>
<font color=\"#0091EA\"><b>J2ME </b></font>: Java Platform Micro Edition : It provides flexibile environment for applications running on mobile and other embedded devices like printers & PDA's etc.<br>
<br><br><br><br><br><br>
 ",
        "<font color='#3f7f59'>/*-----------Sample Code----------*/</font><font color='#7f0055'>class</font> Simple{     <br> <font color='#7f0055'>public</font> <font color='#7f0055' >static</font> <font color='#7f0055'>void</font> main(<font color='#7f0055'>String</font> args[]){ <br>      <font color='#7f0055'>System</font>.out.println(<font color='#2a00ff'>\"Hello Java\"</font>);     <br> } <br> }<font color='#3f7f59'>/*---------------------*/</font>",
        "<span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br><span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n<span> JDBC stands for Java Database Connectivity, which is a standard Java API for databaseindependent\nconnectivity between the Java programming language and a wide range of databases.<br><br>\n<span><font color=\"\\#0091EA\"><b><i><u>  Describe a general JDBC Architecture?</u></i></b></font></span><br>\n<span> General JDBC Architecture consists of two layers: JDBC API (This provides the application-to-\nJDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver\nConnection).<br><br>"
      ],
      "Oops Concepts": [
        "A <b>programming language</b> is a formal computer language or constructed language designed to communicate instructions to a machine, particularly a computer.<br>
Programming languages can be used to create programs to control the behavior of a machine or to express algorithms.
<br>
<br>
There many types of programming languages which includes:<br>
1: Procedural languages<br>
2: Object-Oriented languages<br>
3: Assembly languages<br>
4: Hardware description languages<br>
5:  Compiled languages<br>
& many more...
<br><br>

<span><font color=\"#0091EA\"><b>Procedural Languages:</b></font></span><br>
The languages like C,Pascal,Fortran etc., are called Procedural Oriented Programming languages, because in these languages.<br>
procedures or functions are used to perform a task.<br>
In procedural languages more concentration on the procedure (or) process, leaving data behind.<br>
The data which is more important than the process is left global(or)public, open for all and thereby giving a chance for illegal manipulation.
<br><br>

<span><font color=\"#0091EA\"><b><center>Object-Oriented languages:</b></font></span><br>
The languages like C++, Java use Classes and Objects in their programs and are called Object-Oriented Programming languages.<br>
In Object-Oriented languages concentration is onthe Object i.e., data.<br>
Data is kept under tight security & process is built around data.
<br><br>

<span><font color=\"#0091EA\"><b>Features of Object-Oriented languages:</b></font></span><br>
There are many features related to the Object-Oriented approach.Some of then are,<br>
1: Class<br>
2: Object<br>
3: Encapsulation<br>
4: Abstraction<br>
5: Inheritance<br>
6: polymorphism<br><br>

<span><font color=\"#0091EA\"><b>1: Class:</b></font></span><br>
A class can be defined as a template (or) blue print that describes the behaviors/states that object of its type support.<br>
A Class is central to any object-oriented programming.<br>
A Class is collection of data & methods.<br>
A class is a blue print from which individual objects are created.<br>
It is only through class the concept of data security gets implemented in object-oriented languages.
<br><br>
<span><font color=\"#0091EA\"><b>2: Object:</b></font></span><br>
Object is the root of the entire OOP's methodology.<br>
An object is also called as a variable of class type.
An Object is any thing that really exists in the world & can be distinguished from others.<br>
For example, a car , a person, a tree etc..<br>
Object have both states & behaviours.<br>
Example: 
A person has states like - name, color etc.. <br>
A person has behaviours like - talking, running, laughing etc..
<br><br>
<span><font color=\"#0091EA\"><b>3: Encapsulation:</b></font></span><br>
Encapsulation is the mechanism where the data (variables) and the code (methods) that act on the data will bind together.<br>
For example, writing a class with variables & methods inside the class. Thus, a class bing them together.<br>
so class is an example for encapsulation.
<br><br>
<span><font color=\"#0091EA\"><b>4: Abstraction:</b></font></span><br>
May be a class contains lot's of data and the user doesn't need the entire data.<br>
The user requires only some part of the available data.<br>
In this case we can hide the unnecessary data from the user & expose only that data that is of interest to the user.This is called abstraction.
For example, take a bus. Any bus will have some parts like engine, tyres and mechanical equipments etc.
The user of the bus should know how to drive the bus  and does not require any knowledge of these internal parts of bus.
<br><br>
<span><font color=\"#0091EA\"><b>5: Inheritance:</b></font></span><br>
Inheritance is one of the key feature of the oop's through which the new classes will acquire all the features of the existing classes.
For example, a class A with some members (i.e, variables & methods).If another class B , want's to acquire same features as class A, then we can derive class B from A by inheriting members of A class.
The idea behind inheritance is reusability.
<br><br>
<span><font color=\"#0091EA\"><b>6: Polymorphism:</b></font></span><br>
In Greek, poly means many & morphos means many.<br>
So, polymorphism is the ability to exist in different forms.<br>
In programming it refers to,  a single variable to refer to objects of different types and thus, using that variable we can call the methods of different objects.<br>
Thus a method can perform different tasks depending onthe type of the object.<br>
",
        "<font color=\"#0091EA\"><b>/*Class Example*/</b></font><br>
class Person{<br>
	//properties of person - variables<br>
	String name;<br>
	int age;<br>
	//actions performed by a person<br>
	void talk(){<br>
	}<br>
	void run(){<br>
	}<br>
}<br>
/*Here Person is the name of the class, and class have it's members (variables & methods)*/<br>
<br><br>
<font color=\"#0091EA\"><b>/*Creating Object Example*/</b></font><br>
Person ram = new Person();<br>
/*Here ram is the name of the object of type Person*/<br>
<br><br>
<font color=\"#0091EA\"><b>/*Encapsulation Example*/</b></font><br>
class Person{<br>
	private String name;<br>
	private int age;<br>
	public void talk(){<br>
		System.out.println(\"Hello I am \"+ name);<br>
	}<br>
}<br>
/*Here we're using class to encapsulate  variables & methods . */<br>
<br><br>
<font color=\"#0091EA\"><b>/*Inheritance Example*/</b></font><br>
class Parent{<br>
	String surname;<br>
}class Child extends Parent{<br>
	String name;<br>
	public void printFullName(){<br>
		System.out.println(\"Hello my full name is \"+ surname + \"  \"+ name);<br>
	}<br>
}<br>
/*variables & methods of parent class can be inherited to child class*/<br>
/*Here surname can be inherited from Parent class to Child class */<br>
<br><br>
<font color=\"#0091EA\"><b>/*Polymorphism Example*/</b></font><br>
class Add{<br>
	void calculation(int no){<br>
		System.out.println(no+no);<br>
	}<br>
}<br>
Class Sub extends Add{<br>
	void calculation(int no){<br>
		System.out.println(no-no);<br>
	}<br>
}<br>
/*Take two objects obj1 & obj2 of classes Add & Sub respectively.<br>Now create a reference variable 'ref' to class Add as ,<br>
Add ref;<br>
If you use this 'ref' variable to the object of class Add, as:<br>
ref = obj1;<br>
Now if you call the  calculation(int) as;<br>
ref.calculation(1);<br>
It will call the calculation(int) method of Add class.<br>

If you use this 'ref' variable to the object of class Sub, as:<br>
ref = obj2;<br>
Now if you call the  calculation(int) as;<br>
ref.calculation(1);<br>
It will call the calculation(int) method of Sub class.<br>

*/",
        "<span><font color=\"#0091EA\"><b>What is Procedural-Oriented approach?</b></font></span><br>
Procedural-Oriented approach is a programming methodology to design computer programs using functions.<br>
<span><font color=\"#0091EA\"><b>What is Object-Oriented approach?</b></font></span><br>
Object-Oriented approach is a programming methodology to design computer programs using classes & objects.<br>
<span><font color=\"#0091EA\"><b>What are Procedural Languages?</b></font></span><br>
Ada,C,Pascal,Fortran, MATLAB, JavaScript, Go, ECMAScript and more...<br>
<span><font color=\"#0091EA\"><b>What are Object-Oriented Languages?</b></font></span><br>
Ada 95, C++,Java, PHP, Groovy, Objective-c, Cobra and more...<br>
<span><font color=\"#0091EA\"><b>Is Java purely object-oriented?</b></font></span><br>
Java is not purely object oriented language as there are primitive data types which are not objects.<br>
However, in Java 5.0, autoboxing enables programmers to proceed as if primitive types were instances of their wrapper class.<br>
<span><font color=\"#0091EA\"><b>Which is purely object-oriented programming language? </b></font></span><br>
Simula<br>
<span><font color=\"#0091EA\"><b>What are the languages that are not purely object oriented?</b></font></span><br>
Java, Perl and more...<br>
<span><font color=\"#0091EA\"><b>What is the difference b/w class & object?</b></font></span><br>
A Class is a model for creating objects & doesn't exist phisically.
An object is any that exists physcially.<br>
<span><font color=\"#0091EA\"><b>What is the instance?</b></font></span><br>
Instance means, allocating sufficient memory-space to a class for it's data & members.
<br><br><br><br>"
      ],
      "Servlets Introduction":[
      "<br> At the beginning stages of computers we have client server architecture. <br>
Where the main purpose of the server is to share the static resources to the client requirements. <br>
In this case when we send a request to the server machine, server will identify the requested resource and send back to the client machine as a response.<br>
Here server is generating the response without executing any application at server machine so that this kind of response is called as static response.<br>
As per the application requirements we need to get dynamic response from server machine. <br>
To generate dynamic response server must execute some applications at server machine, for this we should provide server side applications.<br>
<br>
To provide server side programming for the sake of dynamic response we should use the following server side technologies.<br>
1)	CGI<br>
2)	Servlets<br>
3)	Jsp<br>
4)	php	<br>
5)	nodeJs<br>
<br><br><br><br><br> "
	,"Oops! No Data",
	"<font color=\'#0091EA\'><b><br>1)What is Protocol?</b></font><br>
Protocol is a set of rules and regulations, which can be used to carry the data from one machine to another machine over the network.<br>
Http protocol is a connection less, stateless and a compatible protocol to carry hypertext data from client to server and from server to client.<br>
<br>
<font color=\'#0091EA\'><b>2)What is  Hyper Text Transfer Protocol [HTTP] ?</b></font><br>
Http protocol is a connection less, stateless and a compatible protocol to carry hypertext data from client to server and from server to client.<br>
Http uses reliable TCP connections bydefault on TCP port 80.<br>
Http methods : <br>
1.0 version the Http methods are <br>1) GET   <br>2) POST	<br>3) HEAD<br>
1.1 version the Http methods are <br>1) Options <br>2) PUT <br>3) TRACE <br>4) DELETE<br>

<font color=\'#0091EA\'><b>3)What is Transmission Control Protocol [TCP] ?</b></font><br>
The Transmission Control Protocol (TCP) is a core protocol of the Internet protocol suite.<br>
Transmission control protocol (TCP) is a network communication protocol designed to send data packets over the Internet.<br>
TCP is a transport layer protocol in the OSI layer and is used to create a connection between remote computers by transporting and ensuring the delivery of messages over supporting networks and the Internet.<br>
<br>
<font color=\'#0091EA\'><b>4)What is IP Address?</b></font><br>
IP Address is the unique identification to each and every machine over the network, which could be provided by the network manage.<br>
<br>
<font color=\'#0091EA\'><b>5)What is Port Number?</b></font><br>
Port Number is the unique identification to each and every process being executed at single machine, which could be provided by the operating system. <br>
<br>
<font color=\'#0091EA\'><b>6)What is Query String?</b></font><br>
Query String is a collection of name value pairs appended to URL in order to send input to a particular web resource from client machine.<br>
<br>
<font color=\'#0091EA\'><b>7)What is Uniform Resource Identifier (URI)?</b></font><br>
URI is a string specification which can be used to refer an object available at server machine.<br>
There are two types of URI's:<br>
URL: url is a string specification which can be used to refer an object available at machine through it's locator.<br>
URN: urn is a string specification which can be used to refer an object available at server machine through it's logical name.<br>
<br><br><br><br><br>
      "
      ],
       "CGI":[
      "<br>  CGI is a technology which was designed on the basis of 'C' technology and some scripting technology.<br>
If we deploy any CGI application at server for every new request came from client automatically server will create a separate process at server machine.<br>
Process is a heavy weight component that's why to handle it system must consume more number of system resources.<br>
In the above situation if we increase more number of requests to the same CGI application then server will create more number of processes. <br>
This approach will increase burden to the server machine as a result application performance could be degraded. <br>
By running a CGI program, rather than delivering a static HTML page, the server can put dynamic and updated information on web page.<br>
<br><br><br><br><br><br>
      ",
	  "Oops! No Data",
	  "Oops! No Data"
      ],
      "What is Servlet?":[
      "<br>  Servlets is a server side technology which was designed on the basis of Java Technology. <br>
As we know Java is a Thread Based Technology that's why Servlets is also a Thread Based Technology.<br>
If we deploy any Servlets application at server machine then for every new request came from clients automatically servlet may create a separate thread on the servlet object.<br>
If we increase more number of client requests then more number of threads will be created instead of process. <br>
Thread is a light weight component when compare to process that's why this approach will not increase burden to the server machine.<br>

<br><br><br><br><br><br>
      "
      ],
      "Servlet API(Package : javax.servlet)":[
      "<br>  Servlet API contains 2 packages namely <font color=\"#0091EA\"><b>javax.servlet</b></font> & <font color=\"#0091EA\"><b>javax.servlet.http</b></font><br>
javax.servlet package contains intefaces & classes that are not specific to any protocol.<br>
<font color=\"#0091EA\"><b>Interfaces in javax.servlet package:</b></font><br>
Servlet<br>
ServletRequest<br>
ServletResponse<br>
RequestDispatcher<br>
ServletConfig<br>
ServletContext<br>
SingleThreadModel<br>
Filter<br>
FilterConfig<br>
FilterChain<br>
ServletRequestListener<br>
ServletRequestAttributeListener<br>
ServletContextListener<br>
ServletContextAttributeListener<br>
<br>
<font color=\"#0091EA\"><b>Classes in javax.servlet package:</b></font><br>
GenericServlet<br>
ServletInputStream<br>
ServletOutputStream<br>
ServletRequestWrapper<br>
ServletResponseWrapper<br>
ServletRequestEvent<br>
ServletContextEvent<br>
ServletRequestAttributeEvent<br>
ServletContextAttributeEvent<br>
ServletException<br>
UnavailableException<br>
<br><br><br><br><br><br>
      "
      ],
      "Servlet API(Package : javax.servlet.http)":[
      "<br>  javax.servlet.http contains interfaces & classes that are specific to http protocol.<br>
<br>
<font color=\"#0091EA\"><b>Interfaces in javax.servlet.http package:</b></font><br>
HttpServletRequest<br>
HttpServletResponse<br>
HttpSession<br>
HttpSessionListener<br>
HttpSessionAttributeListener<br>
HttpSessionBindingListener<br>
HttpSessionActivationListener<br>
HttpSessionContext (deprecated)<br>
<br><br><br><br><br><br>
<font color=\"#0091EA\"><b>Classes in javax.servlet.http package:</b></font><br>
HttpServlet<br>
Cookie<br>
HttpServletRequestWrapper<br>
HttpServletResponseWrapper<br>
HttpSessionEvent<br>
HttpSessionBindingEvent<br>
HttpUtils (deprecated)<br>
<br><br><br><br><br><br>
      ",
      "Oops! No  Data ",
      "Oops! No Data "
      
      ],
	  Servlet Life Cycle:[
	  "<font color=\'#0091EA\'><b>Servlet Loading:</b></font> <br>
Custom ClassLoader of Container  will load the requested servlet byte to the memory.<br>
<br>
<font color=\'#0091EA\'><b>Servlet Instantiation:</b></font> <br>
Container will create an object for loaded servlet.<br>
Servlet instance is created only once in the servlet life cycle.<br>
<br>
<font color=\'#0091EA\'><b>Servlet Initialization:</b></font> <br>
Container will execute the init() only once to perform initialization of the servlet .<br>
<br>
<font color=\'#0091EA\'><b>public void init(ServletConfig config) throws ServletException </b></font> <br>
<br>
<font color=\'#0091EA\'><b>Generating Dynamic Response:</b></font> <br>
After servlet initialization container will create a new thread to access service method for every request. <br>
Container calls the service() each time when request for the servlet is received.<br>
To access service(), container must create servlet request & response object's.<br>
After creating request/response objects, container will generate dynamic response.<br>
After reaching the end of the service() the thread will be in dead state.<br>
The container dispatch response  to the  client  and after dispatching container will destroy request and response object's.<br>
 <br>
<font color=\'#0091EA\'><b>public void service(ServletRequest request, ServletResponse response)   throws ServletException, IOException </b></font> <br>
 <br> 
<font color=\'#0091EA\'><b>Servlet De-Instantiation:</b></font> <br>
After destroying request and response objects container will wait up to some time, depends on the container implementation,
when container identifies no further request for the same resource then container will destroy the servlet object.<br>
<br>
<font color=\'#0091EA\'><b>public void destroy()  </b></font> <br>
<br>
<font color=\'#0091EA\'><b>Servlet Unloading:</b></font> <br>
As per the servers memory management container will unload the loaded servlet byte code.<br>
<br><br><br><br>",
	  "Oops! No  Data ",
	  "<font color=\'#0091EA\'><b>1)What are Servlet Life Cylce Methods?</b></font> <br>
init(); <br>
service() <br>
destroy() <br>
 <br>
<font color=\'#0091EA\'><b>2)Is Servlets thread-safe?Why?</b></font> <br>
Yes. <br>
Create a new thread to access service method for every request.
That's why servlets are by default thread safe.
 <br>
<font color=\'#0091EA\'><b>3)When servlet object is created?</b></font> <br>
At the time of first request. <br>
<br> <br> <br> <br>
"
	  ]
    },
      "com_ques": {
  "comp": [
    "Infosys",
    "Intel"
  ],
	 "Infosys": "<span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span><br><br>",
      "Intel": "<span><font color=\"#0091EA\"><b><center>   Total: 100</center></b></font></span>\n<span> <font color=\"#0091EA\"><b><i><u> What is JDBC?</u></i></b></font></span><br>\n\n<br><br>"

  }
    }
  
}